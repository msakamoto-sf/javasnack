<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration that checks the Google coding conventions from Google Java Style
    that can be found at https://google.github.io/styleguide/javaguide.html

    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.org (or in your downloaded distribution).

    To completely disable a check, just comment it out or delete it from the file.
    To suppress certain violations please review suppression filters.

    Authors: Max Vetrenko, Mauryan Kansara, Ruslan Diachenko, Roman Ivanov.
 -->

<!-- 
v10.23.1 の google_checks.xml からコピーしてカスタマイズしたものになります。
https://github.com/checkstyle/checkstyle/blob/checkstyle-10.23.1/src/main/resources/google_checks.xml
なぜ v10.23.1 かというと、2025-08-02時点の eclipse checkstyle plugin が使用しているバージョンに揃えたためです。
厳密には eclipse checkstyle plugin は 10.23.0 を使っていましたが、bug fix など 10.23.1 で複数対応されたため、
コマンドライン側については minor bug fix 版を採用してもそれほど eclipse 側と大きな差異になることはないだろうと判断しました。

カスタマイズ内容: (「もとの設定」とは上記オリジナルの google_checks.xml のことを指します)

- Indentation 設定を無効化
  - https://checkstyle.org/checks/misc/indentation.html
  - もとの設定だとインデントの種類によって 2/4/0 を使い分けてますが、そうなるとIDEやEditorのフォーマッタもそれに対応する必要があります。
  - 特定のIDEだけを考えるならそれでも良いでしょうが、Eclipse系/NetBeans/IDEA三種 + vim/emacs/vscode 全てに柔軟に対応するとなるとかなり難しいのではないかと。
  - またJava8以降はラムダ式の表現なども増え、インデントフォーマットがさらに複雑化し、checkstyle側で対応しきれない状況となってきました。
  - そのため、完全に無効化します。
  - 実用上は、特定IDE上で統一されたフォーマッタを使うことでindentを揃えるイメージです。
- CustomImportOrder 設定を無効化
  - https://checkstyle.org/checks/imports/customimportorder.html
  - もとの設定では sortImportsInGroupAlphabetically でアルファベット順のimportを強制していました。
  - しかし Eclipse の Java -> Code Style -> Organize Imports のデフォルト設定はそうなっていないのと、
  Eclipse上でもこれはFormatterとしてimport/exportできる設定になっていない、つまり簡単に設定をimportできるものではない点、
  また他のIDE/editorでの自動補完の状況も不明なため、特別な検査を行わないcheckstyleのデフォルトに任せるという判断に倒しました。
  - (import organize機能のないeditorなどでimportを手書きしている人が混ざる状況であれば強制したほうが良いかもしれません。) 
- AbbreviationAsWordInName で許容文字数(allowedAbbreviationLength)を5に拡張
  - https://checkstyle.org/checks/naming/abbreviationaswordinname.html
  - もとの設定では 0 になっていて、つまり大文字1つ以上を全てNG扱いにしていた。
  - ただ、IOExceptionやURLDecoderなどJavaですでに大文字2つ以上を使っているクラスのテストや実験であるのをわかりやすくするため、クラスやメソッドに
  "...IOException" や "...URL..." など直接つかっているものもある。
  そのため、本プロジェクトに限定して allowedAbbreviationLength を5に拡張し、許容度を広げた。
  - NOTE: 通常のプロジェクトであればもとの設定そのままで始めて良いと思われる。checkstyleのデフォルトは2.
- LineLength
  - https://checkstyle.org/checks/sizes/linelength.html
  - もとの設定では100文字までになっているが、テスト/実験コードということもあり 200 文字まで許容に変更している。
  - なお一部ではさらにそれ以上の文字列もあり、これはsuppress filterにより除外した。
  - NOTE: 通常のプロジェクトであればもとの設定で100文字程度で始めて良いと思われる。
- EmptyCatchBlock
  - https://checkstyle.org/checks/blocks/emptycatchblock.html
  - もとの設定では "expected" という変数名でexceptionを受けていればOKとなっている(exceptionVariableName)。
  - ただ、sleepに対するinterruptのようにexpectedというよりは単に無視する "ignore", "ignored" という変数名も多用しているので、expected|ignoreに変更した。
- SuppressionXpathFilter
  - https://checkstyle.org/filters/suppressionxpathfilter.html
  - xpathによるsuppression filter だが、このプロジェクトでは使わないのと、デフォルトでは ${org.checkstyle.google.suppressionxpathfilter.config} を使うが eclipse-cs ではデフォルトでこのプロパティを解決できないため、無効化した。 

NOTE-1: 以下のJavaDoc関連は全般的に無効化していますが、それはこのプロジェクトが実験/テスト用のためです。
通常のプロジェクトであればもとの設定そのままで始めて良いと思います(テストコードについては suppression filter で除外するなど調整)。
  (個人的には、ライブラリ開発であれば必須だが、アプリケーション側の開発では不要と思う)

- JavadocMethod
  - https://checkstyle.org/checks/javadoc/javadocmethod.html
  - テスト/実験コードという本プロジェクトの性質上、JavaDocは特に必要ないためコメントアウトして無効化してます。
- SummaryJavadoc
  - https://checkstyle.org/checks/javadoc/summaryjavadoc.html
  - テスト/実験コードという本プロジェクトの性質上、JavaDocは特に必要ないため要約有無及び要約末尾の"."チェックはコメントアウトして無効化してます。
- JavadocParagraph
  - https://checkstyle.org/checks/javadoc/javadocparagraph.html
  - 本プロジェクトは実験/テスト目的ということもあり、JavaDocのルールは重要視していない。そのためコメントアウトして無効化しています。
- RequireEmptyLineBeforeBlockTagGroup
  - https://checkstyle.org/checks/javadoc/requireemptylinebeforeblocktaggroup.html
  - Eclipse 上で補完生成される javadoc では
  /**
   * 
   * @author ...
   * @param ...
   */
     となり、厳密な empty line とはならないため、コメントアウトして無効化しています。
- MissingJavadocMethod
  - https://checkstyle.org/checks/javadoc/missingjavadocmethod.html
  - 本プロジェクトは実験/テスト目的ということもあり、JavaDocのルールは重要視していない。そのためコメントアウトして無効化しています。
- MissingJavadocType
  - https://checkstyle.org/checks/javadoc/missingjavadoctype.html
  - 本プロジェクトは実験/テスト目的ということもあり、JavaDocのルールは重要視していない。そのためコメントアウトして無効化しています。

NOTE-2: 8.18 ベースのときは // @formatter:off(on) の都合で CommentsIndentation をBLOCKだけにしていました。
検討の結果、 // @formatter:off(on) の場所をうまくずらすことで single line comment についても対応できることが判明したため、
8.28 デフォルトである single + block 両方チェックの設定に変更しています。

-->

<module name="Checker">

  <property name="charset" value="UTF-8"/>

  <!--
  eclipse checkstyle plugin でロードしようとすると、${org.checkstyle.google.severity} が未定義エラー扱いになった。
  そのため property 指定を止めて、明示的に value="warning" にカスタマイズした。
  <property name="severity" value="${org.checkstyle.google.severity}" default="warning"/>
  -->
  <property name="severity" value="warning"/>

  <property name="fileExtensions" value="java, properties, xml"/>
  <!-- Excludes all 'module-info.java' files              -->
  <!-- See https://checkstyle.org/filefilters/index.html -->
  <module name="BeforeExecutionExclusionFileFilter">
    <property name="fileNamePattern" value="module\-info\.java$"/>
  </module>

  <module name="SuppressWarningsFilter"/>

  <!--
  NOTE: checkstyleの除外フィルタ(suppression filter) には癖があり、本体のXMLファイルから
  suppression filterのXMLを参照する仕組みとなる。
  ではファイルを参照する時の相対パス解決はどうするかだが、IDE plugin 経由と Maven/Gradle 等のビルドツール経由
  でそれぞれ微妙に設定アプローチのバリエーションが存在する。
  Eclipse 経由 : eclipse checkstyle plugin 側で独自の専用プロパティを組み込んで実行しているため、それを使う。
    -> 今回はこのXMLファイルと同じディレクトリを意味する ${samedir} を使用した。
    see: https://checkstyle.org/eclipse-cs/#!/properties
  maven-checkstyle-plugin 経由 : <suppressionsLocation> でpom.xml側からsuppression filterを指定することができる。
    see: http://maven.apache.org/plugins/maven-checkstyle-plugin/examples/suppressions-filter.html

  maven-checkstyle-plugin の <suppressionsLocation> 方式ではEclipse側が利用できない。
  Eclipse側の利用を考慮するなら、eclipse checkstyle plugin 側の専用プロパティ ${samedir} を組み合わせて、
  本来の王道である本体XMLからの SuppressionFilter moduleによる外部XML参照にするのが良い。
  -> そうなると maven-checkstyle-plugin 側をどうするかだが、
  こちらで Eclipse と同等の ${samedir} プロパティを設定することができる。
  これにより、Eclipse用の設定がmavenでも同様に動作可能となる。

  see: https://checkstyle.org/filters/suppressionfilter.html
  see: http://maven.apache.org/plugins/maven-checkstyle-plugin/examples/suppressions-filter.html
  see: https://kazurof.github.io/GoogleJavaStyle-ja/
  see: http://hideoku.hatenablog.jp/entry/2015/10/23/065739
  see: https://stackoverflow.com/questions/198244/checkstyle-suppression-filters
  see: https://checkstyle.org/config.html#Properties
  -->
  <module name="SuppressionFilter">
    <property name="file" value="${samedir}/checkstyle-suppressions.xml"/>
    <property name="optional" value="false"/>
  </module>

  <!-- https://checkstyle.org/filters/suppresswithnearbytextfilter.html -->
  <module name="SuppressWithNearbyTextFilter">
    <property name="nearbyTextPattern"
              value="CHECKSTYLE.SUPPRESS\: (\w+) for ([+-]\d+) lines"/>
    <property name="checkPattern" value="$1"/>
    <property name="lineRange" value="$2"/>
  </module>

  <!-- Checks for whitespace                               -->
  <!-- See http://checkstyle.org/checks/whitespace/index.html -->
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <module name="LineLength">
    <property name="fileExtensions" value="java"/>
    <!--
    <property name="max" value="100"/>
    -->
    <property name="max" value="200"/>
    <property name="ignorePattern"
             value="^package.*|^import.*|href\s*=\s*&quot;[^&quot;]*&quot;|http://|https://|ftp://"/>
  </module>

  <module name="TreeWalker">
    <module name="OuterTypeFilename"/>
    <module name="IllegalTokenText">
      <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
      <property name="format"
               value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
      <property name="message"
               value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
    </module>
    <module name="AvoidEscapedUnicodeCharacters">
      <property name="allowEscapesForControlCharacters" value="true"/>
      <property name="allowByTailComment" value="true"/>
      <property name="allowNonPrintableEscapes" value="true"/>
    </module>
    <module name="AvoidStarImport"/>
    <module name="OneTopLevelClass"/>
    <module name="NoLineWrap">
      <property name="tokens" value="PACKAGE_DEF, IMPORT, STATIC_IMPORT"/>
    </module>
    <module name="NeedBraces">
      <property name="tokens"
               value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
    </module>
    <module name="LeftCurly">
      <property name="id" value="LeftCurlyEol"/>
      <property name="tokens"
                value="ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF,
                    INTERFACE_DEF, LAMBDA, LITERAL_CATCH,
                    LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF,
                    LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF,
                    OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF"/>
    </module>
    <module name="LeftCurly">
      <property name="id" value="LeftCurlyNl"/>
      <property name="option" value="nl"/>
      <property name="tokens"
                value="LITERAL_CASE, LITERAL_DEFAULT"/>
    </module>
    <module name="SuppressionXpathSingleFilter">
      <!-- LITERAL_CASE, LITERAL_DEFAULT are reused in SWITCH_RULE  -->
      <property name="id" value="LeftCurlyNl"/>
      <property name="query" value="//SWITCH_RULE/SLIST"/>
    </module>
    <module name="RightCurly">
      <property name="id" value="RightCurlySame"/>
      <property name="tokens"
                value="LITERAL_TRY, LITERAL_CATCH, LITERAL_IF, LITERAL_ELSE,
                    LITERAL_DO"/>
    </module>
    <module name="SuppressionXpathSingleFilter">
      <property name="id" value="RightCurlySame"/>
      <property name="query" value="//RCURLY[parent::SLIST[parent::LITERAL_CATCH
                               and not(parent::LITERAL_CATCH/following-sibling::*)]]"/>
    </module>
    <module name="RightCurly">
      <property name="id" value="RightCurlyAlone"/>
      <property name="option" value="alone"/>
      <property name="tokens"
               value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,
                    INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF,
                    COMPACT_CTOR_DEF, LITERAL_SWITCH, LITERAL_CASE, LITERAL_FINALLY,
                    LITERAL_CATCH"/>
    </module>
    <module name="SuppressionXpathSingleFilter">
      <!-- suppression is required till https://github.com/checkstyle/checkstyle/issues/7541 -->
      <property name="id" value="RightCurlyAlone"/>
      <property name="query" value="//RCURLY[parent::SLIST[count(./*)=1
                               and not(parent::LITERAL_CATCH)]
                               or (preceding-sibling::*[last()][self::LCURLY]
                               and not(parent::SLIST/parent::LITERAL_CATCH))
                               or (parent::SLIST/parent::LITERAL_CATCH
                               and parent::SLIST/parent::LITERAL_CATCH/following-sibling::*)]"/>
    </module>
    <module name="WhitespaceAfter">
      <property name="tokens"
               value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE, LITERAL_RETURN,
                    LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, LITERAL_FINALLY, DO_WHILE, ELLIPSIS,
                    LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LAMBDA,
                    LITERAL_YIELD, LITERAL_CASE, LITERAL_WHEN"/>
    </module>
    <module name="WhitespaceAround">
      <property name="allowEmptyConstructors" value="true"/>
      <property name="allowEmptyLambdas" value="true"/>
      <property name="allowEmptyMethods" value="true"/>
      <property name="allowEmptyTypes" value="true"/>
      <property name="allowEmptyLoops" value="true"/>
      <property name="allowEmptySwitchBlockStatements" value="true"/>
      <property name="ignoreEnhancedForColon" value="false"/>
      <property name="tokens"
               value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,
                    BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND,
                    LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY,
                    LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED,
                    LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN,
                    NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR,
                    SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT,
                    TYPE_EXTENSION_AND, LITERAL_WHEN"/>
      <message key="ws.notFollowed"
              value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks
               may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
      <message key="ws.notPreceded"
              value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
    </module>
    <module name="SuppressionXpathSingleFilter">
      <property name="checks" value="WhitespaceAround"/>
      <property name="query" value="//*[self::LITERAL_IF or self::LITERAL_ELSE or
                                 self::STATIC_INIT]/SLIST[count(./*)=1]
                                 | //*[self::STATIC_INIT or self::LITERAL_TRY or self::LITERAL_IF]
                                 //*[self::RCURLY][parent::SLIST[count(./*)=1]]
                                 | //SLIST[count(./*)=1][parent::LITERAL_TRY and
                                 not(following-sibling::*)]
                                 | //SLIST[count(./*)=1][parent::LITERAL_CATCH and
                                 not(parent::LITERAL_CATCH/following-sibling::*)]"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="format" value="\{[ ]+\}"/>
      <property name="message" value="Empty blocks should have no spaces. Empty blocks
                                   may only be represented as '{}' when not part of a
                                   multi-block statement (4.1.3)"/>
    </module>
    <module name="OneStatementPerLine"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="ArrayTypeStyle"/>
    <module name="MissingSwitchDefault"/>
    <module name="FallThrough"/>
    <module name="UpperEll"/>
    <module name="ModifierOrder"/>
    <module name="EmptyLineSeparator">
      <property name="tokens"
               value="PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                    STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF,
                    COMPACT_CTOR_DEF"/>
      <property name="allowNoEmptyLineBetweenFields" value="true"/>
    </module>
    <module name="SeparatorWrap">
      <property name="id" value="SeparatorWrapDot"/>
      <property name="tokens" value="DOT"/>
      <property name="option" value="nl"/>
    </module>
    <module name="SeparatorWrap">
      <property name="id" value="SeparatorWrapComma"/>
      <property name="tokens" value="COMMA"/>
      <property name="option" value="EOL"/>
    </module>
    <module name="SeparatorWrap">
      <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/259 -->
      <property name="id" value="SeparatorWrapEllipsis"/>
      <property name="tokens" value="ELLIPSIS"/>
      <property name="option" value="EOL"/>
    </module>
    <module name="SeparatorWrap">
      <!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/258 -->
      <property name="id" value="SeparatorWrapArrayDeclarator"/>
      <property name="tokens" value="ARRAY_DECLARATOR"/>
      <property name="option" value="EOL"/>
    </module>
    <module name="SeparatorWrap">
      <property name="id" value="SeparatorWrapMethodRef"/>
      <property name="tokens" value="METHOD_REF"/>
      <property name="option" value="nl"/>
    </module>
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
      <message key="name.invalidPattern"
             value="Package name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="TypeName">
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                    ANNOTATION_DEF, RECORD_DEF"/>
      <message key="name.invalidPattern"
             value="Type name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="MemberName">
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
      <message key="name.invalidPattern"
             value="Member name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="ParameterName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
             value="Parameter name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="LambdaParameterName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
             value="Lambda parameter name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="CatchParameterName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
             value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="LocalVariableName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
             value="Local variable name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="PatternVariableName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
             value="Pattern variable name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="ClassTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
             value="Class type name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="RecordComponentName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
               value="Record component name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="RecordTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
               value="Record type name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="MethodTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
             value="Method type name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="InterfaceTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
             value="Interface type name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="NoFinalizer"/>
    <module name="GenericWhitespace">
      <message key="ws.followed"
             value="GenericWhitespace ''{0}'' is followed by whitespace."/>
      <message key="ws.preceded"
             value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
      <message key="ws.illegalFollow"
             value="GenericWhitespace ''{0}'' should followed by whitespace."/>
      <message key="ws.notPreceded"
             value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
    </module>
    <!--
    <module name="Indentation">
      <property name="basicOffset" value="2"/>
      <property name="braceAdjustment" value="2"/>
      <property name="caseIndent" value="2"/>
      <property name="throwsIndent" value="4"/>
      <property name="lineWrappingIndentation" value="4"/>
      <property name="arrayInitIndent" value="2"/>
    </module>
  -->

    <module name="AbbreviationAsWordInName">
      <property name="ignoreFinal" value="false"/>
      <!--
      <property name="allowedAbbreviationLength" value="0"/>
      -->
      <property name="allowedAbbreviationLength" value="5"/>
      <property name="tokens"
               value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF,
                    PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF,
                    RECORD_COMPONENT_DEF"/>
    </module>
    <module name="NoWhitespaceBeforeCaseDefaultColon"/>
    <module name="OverloadMethodsDeclarationOrder"/>
    <module name="ConstructorsDeclarationGrouping"/>
    <module name="VariableDeclarationUsageDistance"/>
    <!--
    <module name="CustomImportOrder">
      <property name="sortImportsInGroupAlphabetically" value="true"/>
      <property name="separateLineBetweenGroups" value="true"/>
      <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>
      <property name="tokens" value="IMPORT, STATIC_IMPORT, PACKAGE_DEF"/>
    </module>
    -->
    <module name="MethodParamPad">
      <property name="tokens"
               value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, CTOR_CALL,
                    SUPER_CTOR_CALL, ENUM_CONSTANT_DEF, RECORD_DEF, RECORD_PATTERN_DEF"/>
    </module>
    <module name="NoWhitespaceBefore">
      <property name="tokens"
               value="COMMA, SEMI, POST_INC, POST_DEC, DOT,
                    LABELED_STAT, METHOD_REF"/>
      <property name="allowLineBreaks" value="true"/>
    </module>
    <module name="ParenPad">
      <property name="tokens"
               value="ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF,
                    EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW,
                    LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL,
                    METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA,
                    RECORD_DEF, RECORD_PATTERN_DEF"/>
    </module>
    <module name="OperatorWrap">
      <property name="option" value="NL"/>
      <property name="tokens"
               value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,
                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF,
                    TYPE_EXTENSION_AND "/>
    </module>
    <module name="AnnotationLocation">
      <property name="id" value="AnnotationLocationMostCases"/>
      <property name="tokens"
               value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF,
                      RECORD_DEF, COMPACT_CTOR_DEF"/>
    </module>
    <module name="AnnotationLocation">
      <property name="id" value="AnnotationLocationVariables"/>
      <property name="tokens" value="VARIABLE_DEF"/>
      <property name="allowSamelineMultipleAnnotations" value="true"/>
    </module>
    <module name="NonEmptyAtclauseDescription"/>
    <module name="InvalidJavadocPosition"/>
    <module name="JavadocTagContinuationIndentation"/>
    <!--
    <module name="SummaryJavadoc">
      <property name="forbiddenSummaryFragments"
               value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
    </module>
    -->
    <!--
    <module name="JavadocParagraph">
      <property name="allowNewlineParagraph" value="false"/>
    </module>
    <module name="RequireEmptyLineBeforeBlockTagGroup"/>
    -->
    <module name="AtclauseOrder">
      <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
      <property name="target"
               value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
    </module>
    <!--
    <module name="JavadocMethod">
      <property name="accessModifiers" value="public"/>
      <property name="allowMissingParamTags" value="true"/>
      <property name="allowMissingReturnTag" value="true"/>
      <property name="allowedAnnotations" value="Override, Test"/>
      <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF"/>
    </module>
    <module name="MissingJavadocMethod">
      <property name="scope" value="protected"/>
      <property name="allowMissingPropertyJavadoc" value="true"/>
      <property name="allowedAnnotations" value="Override, Test"/>
      <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF,
                                   COMPACT_CTOR_DEF"/>
    </module>
    <module name="SuppressionXpathSingleFilter">
      <property name="checks" value="MissingJavadocMethod"/>
      <property name="query" value="//*[self::METHOD_DEF or self::CTOR_DEF
                                 or self::ANNOTATION_FIELD_DEF or self::COMPACT_CTOR_DEF]
                                 [ancestor::*[self::INTERFACE_DEF or self::CLASS_DEF
                                 or self::RECORD_DEF or self::ENUM_DEF]
                                 [not(./MODIFIERS/LITERAL_PUBLIC)]]"/>
    </module>
    <module name="MissingJavadocType">
      <property name="scope" value="protected"/>
      <property name="tokens"
                value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                      RECORD_DEF, ANNOTATION_DEF"/>
      <property name="excludeScope" value="nothing"/>
    </module>
    -->
    <module name="MethodName">
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
      <message key="name.invalidPattern"
             value="Method name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="SuppressionXpathSingleFilter">
      <property name="checks" value="MethodName"/>
      <property name="query" value="//METHOD_DEF[
                                     ./MODIFIERS/ANNOTATION//IDENT[contains(@text, 'Test')]
                                   ]/IDENT"/>
      <property name="message" value="'[a-z][a-z0-9][a-zA-Z0-9]*(?:_[a-z][a-z0-9][a-zA-Z0-9]*)*'"/>
    </module>
    <module name="SingleLineJavadoc"/>
    <module name="EmptyCatchBlock">
      <!--
      <property name="exceptionVariableName" value="expected"/>
      -->
      <property name="exceptionVariableName" value="expected|ignore"/>
    </module>
    <module name="CommentsIndentation">
      <property name="tokens" value="SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN"/>
    </module>
    <!-- https://checkstyle.org/filters/suppressionxpathfilter.html -->
     <!--
    <module name="SuppressionXpathFilter">
      <property name="file" value="${org.checkstyle.google.suppressionxpathfilter.config}"
             default="checkstyle-xpath-suppressions.xml" />
      <property name="optional" value="true"/>
    </module>
    -->
    <module name="SuppressWarningsHolder" />
    <module name="SuppressionCommentFilter">
      <property name="offCommentFormat" value="CHECKSTYLE.OFF\: ([\w\|]+)" />
      <property name="onCommentFormat" value="CHECKSTYLE.ON\: ([\w\|]+)" />
      <property name="checkFormat" value="$1" />
    </module>
    <module name="SuppressWithNearbyCommentFilter">
      <property name="commentFormat" value="CHECKSTYLE.SUPPRESS\: ([\w\|]+)"/>
      <!-- $1 refers to the first match group in the regex defined in commentFormat -->
      <property name="checkFormat" value="$1"/>
      <!-- The check is suppressed in the next line of code after the comment -->
      <property name="influenceFormat" value="1"/>
    </module>
  </module>
</module>
